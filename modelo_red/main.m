clearvars, clc, close all

[x, t] = extractor('datos_3.csv');


%%

oculta1 = capa(2, 8, 'relu');
oculta2 = capa(8, 16, 'relu');
salida = capa(16, 1, 'sigmoide');
M = modelo(x,{oculta1, oculta2, salida});

%%
epocas = 100;


E_SGD = entrenamiento_test(x, t, M, ...
    'learningRate', 0.01, ...
    'lossFunction', 'binary cross entropy', ...
    'trainAlgorithm', 'SGD', ...
    'epochs', epocas, ...
    'optimizer', 'GD');

E_MBGD = entrenamiento_test(x, t, M, ...
    'learningRate', 0.001, ...
    'lossFunction', 'binary cross entropy', ...
    'trainAlgorithm', 'MBGD', ...
    'batch_size', 100, ...
    'epochs', epocas, ...
    'optimizer', 'GD');

E_Momentum = entrenamiento_test(x, t, M, ...
    'learningRate', 0.001, ...
    'lossFunction', 'binary cross entropy', ...
    'trainAlgorithm', 'SGD', ...
    'batch_size', 100, ...
    'epochs', epocas, ...
    'optimizer', 'momentum');

E_NAG = entrenamiento_test(x, t, M, ...
    'learningRate', 0.001, ...
    'lossFunction', 'binary cross entropy', ...
    'trainAlgorithm', 'MBGD', ...
    'batch_size', 100, ...
    'epochs', epocas, ...
    'optimizer', 'NAG');

E_RMSProp = entrenamiento_test(x, t, M, ...
    'learningRate', 0.001, ...
    'lossFunction', 'binary cross entropy', ...
    'trainAlgorithm', 'MBGD', ...
    'batch_size', 100, ...
    'epochs', epocas, ...
    'optimizer', 'RMSProp');

E_Adagrad = entrenamiento_test(x, t, M, ...
    'learningRate', 0.001, ...
    'lossFunction', 'binary cross entropy', ...
    'trainAlgorithm', 'MBGD', ...
    'batch_size', 100, ...
    'epochs', epocas, ...
    'optimizer', 'Adagrad');



plot( 1:epocas, E_SGD.C, 1:epocas, E_Momentum.C, 1:epocas, E_NAG.C,  1:epocas, E_MBGD.C,  1:epocas, E_RMSProp.C, 1:epocas, E_Adagrad.C, LineWidth=1);
legend('SGD', 'momentum', 'NAG', 'Mini Batch', 'RMSProp', 'Adagrad');

mapa_prob(E_SGD, t, ', SGD');
mapa_prob(E_Momentum, t, ', momentum');
mapa_prob(E_SGD, t, ', NAG');
mapa_prob(E_SGD, t, ', MBGD');
mapa_prob(E_SGD, t, ', RMSProp');
mapa_prob(E_SGD, t, ', Adagrad');




